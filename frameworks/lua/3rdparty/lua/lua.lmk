lmk.set_name ("lua")

lmk.set_type ("shared")

lmk.add_vars ({LUA_PATH = "./base/"}, {DMZ_USE_LUA_JIT = false})

lmk.add_vars ({LUA_PATH = "./jit/"}, {DMZ_USE_LUA_JIT = true})

lmk.add_files {
   "$(LUA_PATH)lauxlib.h",
   "$(LUA_PATH)lua.h",
   "$(LUA_PATH)luaconf.h",
   "$(LUA_PATH)lualib.h",
   "./base/luacpp.h",
}

lmk.add_files {
   "$(LUA_PATH)lapi.c",
   "$(LUA_PATH)lauxlib.c",
   "$(LUA_PATH)lbaselib.c",
   "$(LUA_PATH)lcode.c",
   "$(LUA_PATH)ldblib.c",
   "$(LUA_PATH)ldebug.c",
   "$(LUA_PATH)ldo.c",
   "$(LUA_PATH)ldump.c",
   "$(LUA_PATH)lfunc.c",
   "$(LUA_PATH)lgc.c",
   "$(LUA_PATH)linit.c",
   "$(LUA_PATH)liolib.c",
   "$(LUA_PATH)llex.c",
   "$(LUA_PATH)lmathlib.c",
   "$(LUA_PATH)lmem.c",
   "$(LUA_PATH)loadlib.c",
   "$(LUA_PATH)lobject.c",
   "$(LUA_PATH)lopcodes.c",
   "$(LUA_PATH)loslib.c",
   "$(LUA_PATH)lparser.c",
   "$(LUA_PATH)lstate.c",
   "$(LUA_PATH)lstring.c",
   "$(LUA_PATH)lstrlib.c",
   "$(LUA_PATH)ltable.c",
   "$(LUA_PATH)ltablib.c",
   "$(LUA_PATH)ltm.c",
   "$(LUA_PATH)lundump.c",
   "$(LUA_PATH)lvm.c",
   "$(LUA_PATH)lzio.c",
   "$(LUA_PATH)print.c",
}
lmk.add_files ({
   "$(LUA_PATH)ljit_backend.c",
   "$(LUA_PATH)ljit_core.c",
   "$(LUA_PATH)ljit_dasm.c",
   "$(LUA_PATH)ljit_mem.c",
   "$(LUA_PATH)ljitlib.c",
   "$(LUA_PATH)lcoco.c",
}, {DMZ_USE_LUA_JIT = true})

lmk.add_vars {localIncludes = "$(lmk.includePathFlag)$(LUA_PATH)"}

lmk.add_vars (
   {localDefines = "/D_CRT_SECURE_NO_DEPRECATE /DLUA_BUILD_AS_DLL"},
   {win32 = true})

-- Note: The official Lua build now uses LUA_USE_LINUX instead of LUA_USE_MACOSX
lmk.add_vars ({localDefines = "-DLUA_USE_LINUX"}, {macos = true})
lmk.add_vars ({localDefines = "-DLUA_USE_LINUX"}, {linux = true})
